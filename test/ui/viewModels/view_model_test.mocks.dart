// Mocks generated by Mockito 5.4.4 from annotations
// in mvvm_getx/test/ui/viewModels/view_model_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mvvm_getx/data/remote/models/model.dart' as _i5;
import 'package:mvvm_getx/data/remote/repositories/app_repository_impl.dart'
    as _i3;
import 'package:mvvm_getx/domain/datasources/base_api_service.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBaseApiService_0 extends _i1.SmartFake
    implements _i2.BaseApiService {
  _FakeBaseApiService_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AppRepositoryImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppRepositoryImpl extends _i1.Mock implements _i3.AppRepositoryImpl {
  @override
  _i2.BaseApiService get apiService => (super.noSuchMethod(
        Invocation.getter(#apiService),
        returnValue: _FakeBaseApiService_0(
          this,
          Invocation.getter(#apiService),
        ),
        returnValueForMissingStub: _FakeBaseApiService_0(
          this,
          Invocation.getter(#apiService),
        ),
      ) as _i2.BaseApiService);

  @override
  set apiService(_i2.BaseApiService? _apiService) => super.noSuchMethod(
        Invocation.setter(
          #apiService,
          _apiService,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<List<_i5.Model>> getData() => (super.noSuchMethod(
        Invocation.method(
          #getData,
          [],
        ),
        returnValue: _i4.Future<List<_i5.Model>>.value(<_i5.Model>[]),
        returnValueForMissingStub:
            _i4.Future<List<_i5.Model>>.value(<_i5.Model>[]),
      ) as _i4.Future<List<_i5.Model>>);
}
